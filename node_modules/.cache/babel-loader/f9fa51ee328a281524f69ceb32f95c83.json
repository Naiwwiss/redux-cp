{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naiw\\\\Desktop\\\\redux\\\\redux-cp\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Checkbox, Text } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleTodo } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todo = _ref => {\n  _s();\n\n  let {\n    todo\n  } = _ref;\n  const dispatch = useDispatch();\n  const [cheked, setCheked] = useState(false);\n\n  const handleCheked = () => dispatch(toggleTodo(todo.id));\n\n  useEffect(() => {\n    setCheked(todo.completed);\n  }, [todo]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mb: 1,\n    bgColor: \"lightcoral\",\n    p: 2,\n    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n      onChange: handleCheked,\n      colorScheme: \"teal\",\n      isChecked: cheked,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        as: todo.completed && \"del\",\n        children: todo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"/q40ur+yIJx8kcLyY6F5ZWc/AUA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["Box","Checkbox","Text","useEffect","useState","useDispatch","toggleTodo","Todo","todo","dispatch","cheked","setCheked","handleCheked","id","completed","content"],"sources":["C:/Users/Naiw/Desktop/redux/redux-cp/src/components/Todo.js"],"sourcesContent":["import { Box, Checkbox, Text } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleTodo } from \"../redux/actions\";\r\n\r\nexport const Todo = ({ todo }) => {\r\n  const dispatch = useDispatch();\r\n  const [cheked, setCheked] = useState(false);\r\n\r\n  const handleCheked = () => dispatch(toggleTodo(todo.id));\r\n\r\n  useEffect(() => {\r\n    setCheked(todo.completed);\r\n  }, [todo]);\r\n\r\n  return (\r\n    <Box mb={1} bgColor=\"lightcoral\" p={2}>\r\n      <Checkbox onChange={handleCheked} colorScheme=\"teal\" isChecked={cheked}>\r\n        <Text as={todo.completed && \"del\"}>{todo.content}</Text>\r\n      </Checkbox>\r\n    </Box>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,OAAO,MAAMC,IAAI,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAChC,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;;EAEA,MAAMQ,YAAY,GAAG,MAAMH,QAAQ,CAACH,UAAU,CAACE,IAAI,CAACK,EAAN,CAAX,CAAnC;;EAEAV,SAAS,CAAC,MAAM;IACdQ,SAAS,CAACH,IAAI,CAACM,SAAN,CAAT;EACD,CAFQ,EAEN,CAACN,IAAD,CAFM,CAAT;EAIA,oBACE,QAAC,GAAD;IAAK,EAAE,EAAE,CAAT;IAAY,OAAO,EAAC,YAApB;IAAiC,CAAC,EAAE,CAApC;IAAA,uBACE,QAAC,QAAD;MAAU,QAAQ,EAAEI,YAApB;MAAkC,WAAW,EAAC,MAA9C;MAAqD,SAAS,EAAEF,MAAhE;MAAA,uBACE,QAAC,IAAD;QAAM,EAAE,EAAEF,IAAI,CAACM,SAAL,IAAkB,KAA5B;QAAA,UAAoCN,IAAI,CAACO;MAAzC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAjBM;;GAAMR,I;UACMF,W;;;KADNE,I"},"metadata":{},"sourceType":"module"}